{"version":3,"file":"static/js/811.f32f2c5e.chunk.js","mappings":"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","sources":["components/Cast/Cast.staled.jsx","components/Cast/Cast.jsx","components/Home/Home.styled.jsx","services/api.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  gap: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchCredits } from '../../services/api';\nimport { useParams } from 'react-router-dom';\nimport { List } from './Cast.staled';\nimport Card from 'react-bootstrap/Card';\nimport { Container } from 'components/Home/Home.styled';\n\nfunction Cast() {\n  const [casts, setCasts] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCredits(movieId).then(({ cast }) => {\n      setCasts(cast);\n    });\n  }, [movieId]);\n\n  return (\n    <Container>\n      <h2>Cast</h2>\n      <List>\n        {casts.map(({ profile_path, original_name, id }) => (\n          <Card style={{ width: '9rem' }} key={id}>\n            <Card.Img\n              variant=\"top\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : 'https://via.placeholder.com/395x574?text=No+Image'\n              }\n            />\n            <Card.Body\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Card.Title>{original_name}</Card.Title>\n            </Card.Body>\n          </Card>\n        ))}\n      </List>\n    </Container>\n  );\n}\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: #0f0f0f;\n  color: #ffffff;\n  justify-content: space-around;\n  padding: 10px;\n`;\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: space-around;\n  margin-top: 20px;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 20px;\n`;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '856f57e7a2f2f6acb1983cbef8b64e80';\n\nexport const fetchTrending = () => {\n  const response = axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US`)\n    .then(({ data }) => data);\n  return response;\n};\n\nexport const fetchSearch = (query, page) => {\n  const response = axios\n    .get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=${page}`\n    )\n    .then(({ data }) => data);\n  return response;\n};\n\nexport const fetchMoviId = id => {\n  const response = axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(({ data }) => data);\n  return response;\n};\n\nexport const fetchCredits = id => {\n  const response = axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    .then(({ data }) => data);\n  return response;\n};\nexport const fetchReviews = id => {\n  const response = axios\n    .get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(({ data }) => data);\n  return response;\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["List","styled","useState","casts","setCasts","movieId","useParams","useEffect","fetchCredits","then","cast","map","profile_path","original_name","id","Card","style","width","variant","src","display","flexDirection","justifyContent","Container","Ul","Title","BASE_URL","API_KEY","fetchTrending","axios","data","fetchSearch","query","page","fetchMoviId","fetchReviews","CardImg","React","ref","bsPrefix","className","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","Object","assign","Img","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}